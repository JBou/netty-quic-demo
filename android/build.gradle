buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'com.android.application'

android {
    compileSdk 33

    defaultConfig {
        applicationId "net.patzleiner.nettyquicdemo"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        /*ndk {
            abiFilters 'armeabi-v7a'
        }*/

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }
    namespace 'net.patzleiner.nettyquicdemo'
}

dependencies {
    //Uncomment this line to load native android library from libs folder, just put the aar in there
    //implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.gitlab.mvysny.slf4j:slf4j-handroid:2.0.4'

    implementation "io.netty:netty-all:${rootProject.ext.nettyVersion}"
    implementation "io.netty.incubator:netty-incubator-codec-classes-quic:${rootProject.ext.nettyQuicVersion}"
    //Uncomment the following line and comment out the line above
    // to load netty while developing from mavenLocal() or from remote repository
    //implementation "io.netty.incubator:netty-incubator-codec-classes-quic:0.0.49.Final-SNAPSHOT"

    //netty-incubator-codec-native-quic is loaded from libs folder
    // once it is officially released to mavenCentral this could be used
    implementation "io.netty.incubator:netty-incubator-codec-native-quic:${rootProject.ext.nettyQuicVersion}:android@aar"
}

repositories {
    maven {
        //This repo contains android native libraries compiled by github.com/JBou
        name 'netty-codec-quic-android'
        url 'https://repo.repsy.io/mvn/jbou/netty-codec-quic'
    }
    mavenCentral()
    google()
    maven {
        //This repo contains netty RELEASE versions for netty-incubator-codec-quic
        name 'oss-sonatype-release'
        url 'https://oss.sonatype.org/content/repositories/releases'
    }
    maven {
        //This repo contains netty SNAPSHOT versions for netty-incubator-codec-quic, not needed in production use
        name 'oss-sonatype-snapshot'
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    mavenLocal()
}